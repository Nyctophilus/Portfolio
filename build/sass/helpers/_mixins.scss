@mixin iconCover {
  background-color: var(--bg-clr-alt);
  border-radius: 50%;
  padding: 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all var(--trans);

  .icon {
    font-size: 1.5rem;
    color: var(--txt-clr);
    cursor: pointer;

    @include breakpoints(tinny-mobile) {
      font-size: unset;
    }
  }
  &:not(:last-of-type) {
    margin-bottom: 1rem;
    @include breakpoints(max-small) {
      margin-bottom: unset;
    }
  }
  &:hover {
    background-color: var(--theme-clr);
    transform: scale(1.05);
    .icon {
      color: white;
    }
  }
  &.active {
    background-color: var(--theme-clr);
    i {
      color: var(--bg-clr);
    }
  }
}

@mixin specialBG {
  background-image: var(--grad-clr);
  padding: 2rem;
  position: absolute;
  clip-path: polygon(0 0, 100% 0, 70% 100%, 0% 100%);
  z-index: 1;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row-reverse;
  gap: 3rem;
}

@mixin amineText($text) {
  position: relative;
  display: block;
  color: transparent;
  overflow: hidden;
  -webkit-text-stroke: 1px var(--txt-clr);

  &::before {
    // [ ] try clip path back ground and animte it with background-position 0 0 --> 2000px 0
    content: attr(data-text);
    position: absolute;
    overflow: hidden;
    color: var(--theme-clr);
    width: 0;
    border-radius: 8px solid var(--theme-clr);
    -webkit-text-stroke: 1px var(--theme-clr);
    top: 0;
    transition: width var(--trans);

    animation: animteWord 5s 5s infinite alternate
      ease-in-out;
  }
  &:hover::before {
    animation: none;
    width: 100%;
  }
}

// Gird system >> Media Queries Mixin
@mixin breakpoints($point) {
  @if $point == "tinny-mobile" {
    @media (max-width: 400px) {
      @content;
    }
  } @else if $point == "mobile" {
    @media (max-width: 576px) {
      @content;
    }
  } @else if $point == "min-small" {
    @media (min-width: 577px) {
      @content;
    }
  } @else if $point == "small" {
    @media (min-width: 577px) and (max-width: 767px) {
      @content;
    }
  } @else if $point == "max-small" {
    @media (max-width: 767px) {
      @content;
    }
  } @else if $point == "min-medium" {
    @media (min-width: 768px) {
      @content;
    }
  } @else if $point == "medium" {
    @media (min-width: 768px) and (max-width: 991px) {
      @content;
    }
  } @else if $point == "max-medium" {
    @media (max-width: 991px) {
      @content;
    }
  } @else if $point == "min-large" {
    @media (min-width: 992px) {
      @content;
    }
  } @else if $point == "large" {
    @media (min-width: 992px) and (max-width: 1199px) {
      @content;
    }
  } @else if $point == "max-large" {
    @media (max-width: 1199px) {
      @content;
    }
  } @else if $point == "min-xlarge" {
    @media (min-width: 1200px) {
      @content;
    }
  } @else if $point == "xlarge" {
    @media (min-width: 1200px) and (max-width: 1399px) {
      @content;
    }
  } @else if $point == "max-xlarge" {
    @media (max-width: 1399px) {
      @content;
    }
  } @else if $point == "xxlarge" {
    @media (min-width: 1400px) {
      @content;
    }
  }
}

@mixin basisVisability($size) {
  @if $size == sm {
    @media (max-width: 767px) {
      display: none !important;
    }
  } @else if $size == md {
    @media (max-width: 991px) {
      display: none !important;
    }
  } @else if $size == lg {
    @media (max-width: 1200px) {
      display: none !important;
    }
  } @else if $size == xl {
    @media (min-width: 1200px) {
      display: none !important;
    }
  }
}
